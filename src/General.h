#ifndef _GENERAL_H
#define _GENERAL_H

////////////////////////////////////////////////////////////
// Defines
////////////////////////////////////////////////////////////
#define _CRT_SECURE_NO_WARNINGS

////////////////////////////////////////////////////////////
// Includes
////////////////////////////////////////////////////////////
#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#include <string.h>

////////////////////////////////////////////////////////////
// Macros
////////////////////////////////////////////////////////////
#define MemoryCopy(Dest, Src, Size) (memcpy(Dest, Src, Size))

////////////////////////////////////////////////////////////
// Classes type
////////////////////////////////////////////////////////////
enum eClass
{
	Mage = 1,
	Cleric,
	Warrior,
	Assasin,
	Thief,
	Bard,
	Druid,
	Bandit,
	Paladin,
	Hunter,
	Worker,
	Pirat
};

////////////////////////////////////////////////////////////
// City type
////////////////////////////////////////////////////////////
enum eCity
{
	cUllathorpe = 1,
	cNix,
	cBanderbill,
	cLindos,
	cArghal,
	cArkhein,
	cLastCity
};

////////////////////////////////////////////////////////////
// Raza type
////////////////////////////////////////////////////////////
enum eRaza
{
	Humano = 1,
	Elfo,
	Drow,
	Gnomo,
	Enano
};

////////////////////////////////////////////////////////////
// Genero type
////////////////////////////////////////////////////////////
enum eGenero
{
	Hombre = 1,
	Mujer
};

////////////////////////////////////////////////////////////
// Char
////////////////////////////////////////////////////////////
struct Char
{
	short int Index;
	short int Head;
	short int Body;
	short int WeaponAnim;
	short int ShieldAnim;
	short int HelmentAnim;
	short int Fx;
	short int Heading;
};

////////////////////////////////////////////////////////////
/// Position
////////////////////////////////////////////////////////////
struct worldPos
{
	short int Map;
	short int X;
	short int Y;
};

////////////////////////////////////////////////////////////
/// Object info
////////////////////////////////////////////////////////////
struct Object
{
	short int objectIndex;
	short int Ammount;
};


////////////////////////////////////////////////////////////
// Characters valid
////////////////////////////////////////////////////////////
int LegalCharacter(int charID, int Numbers, int Special);

////////////////////////////////////////////////////////////
// String is valid
////////////////////////////////////////////////////////////
int LegalString(char * Str, int Numbers, int Special);

////////////////////////////////////////////////////////////
// Separe string by char separator
////////////////////////////////////////////////////////////
char * General_Field_Read(int n, char * string, char * charSeparator);

#endif